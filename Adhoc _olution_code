Codebasics SQL Challenge Adhoc-Requests

Task 1. 
Provide the list of markets in which customer "AtliqExclusive" operate sits business in the APAC region.

SELECT market FROM dim_customer 
WHERE customer = 'Atliq Exclusive' AND region = 'APAC'
GROUP BY market
ORDER BY market ;

Task 2 
What is the percentage of unique product increase in 2021 vs. 2020? The final output contains these fields,
unique_products_2020 unique_products_2021 percentage_chg

with cte_2020 as
(
select count(distinct(product_code)) as A
from fact_sales_monthly
where fiscal_year = 2020
) , 
cte_2021 as
(
select count(distinct(product_code)) as B
from fact_sales_monthly
where fiscal_year = 2021
)

select 
cte_2020.a as unique_products_2020,
cte_2021.b as unique_products_2021,
Round((b-a)*100/a,2) as percentage_chg
from cte_2020,cte_2021;


Task 3 
Provide a report with all the unique product counts for each segment and sort them in descending order of product counts. 
The final output contains 2 fields,segment product_count

select segment,
count(distinct(product_code)) as product_count
from dim_product
group by segment
order by product_count desc;

Task 4. 
Follow-up: Which segment had the most increase in unique products in 2021 vs 2020? 
The final output contains these fields,
segment product_count_2020 product_count_2021 difference*/

WITH CTE1 AS 
	(SELECT P.segment AS A , COUNT(DISTINCT(FS.product_code)) AS B 
    FROM dim_product P, fact_sales_monthly FS
    WHERE P.product_code = FS.product_code
    GROUP BY FS.fiscal_year, P.segment
    HAVING FS.fiscal_year = "2020"),
CTE2 AS
    (
	SELECT P.segment AS C , COUNT(DISTINCT(FS.product_code)) AS D 
    FROM dim_product P, fact_sales_monthly FS
    WHERE P.product_code = FS.product_code
    GROUP BY FS.fiscal_year, P.segment
    HAVING FS.fiscal_year = "2021"
    )     
    
SELECT CTE1.A AS segment, CTE1.B AS product_count_2020, CTE2.D AS product_count_2021, (CTE2.D-CTE1.B) AS difference  
FROM CTE1, CTE2
WHERE CTE1.A = CTE2.C ;

Task 5.
Get the products that have the highest and lowest manufacturing costs. 
The final output should contain these fields,
product_code product manufacturing_cost*/

with cte as 
(
			select 
			m.product_code,p.product,
			m.manufacturing_cost,
			dense_rank() over(order by m.manufacturing_cost desc) as rnk
			from fact_manufacturing_cost m 
            join dim_product p
            on p.product_code=m.product_code
			
)
select 
product_code,product,
manufacturing_cost 
from cte
where rnk in (1,488) ;

Task 6. 
Generate a report which contains the top 5 customers who received an average high pre_invoice_discount_pct for the fiscal year 2021 
and in the Indian market. The final output contains these fields,
customer_code,customer ,average_discount_percentage*/

select
		 p.customer_code,
		 c.customer,round(avg(pre_invoice_discount_pct) over(partition by customer_code),4) as average_discount_percentage
from fact_pre_invoice_deductions p
join dim_customer c on
         c.customer_code = p.customer_code
where fiscal_year = '2021' and market = 'India'
order by average_discount_percentage desc
limit 5;


Task 7
Get the complete report of the Gross sales amount for the customer “Atliq Exclusive” for each month.
This analysis helps to get an idea of low and high-performing months and take strategic decisions.
The final report contains these columns: 
Month,Year,Gross sales Amount */

select 
concat(monthname(s.date)," " ,year(s.date)) as month,
s.fiscal_year,c.customer,
round(sum(s.sold_quantity*g.gross_price),2) as gross_sales_amount 
from fact_sales_monthly s
join fact_gross_price g
       on g.product_code=s.product_code and
       g.fiscal_year = s.fiscal_year
join dim_customer c
       on c.customer_code = s.customer_code
where c.customer = 'Atliq Exclusive'
group by s.date,s.fiscal_year
order by s.date;


Task 8
In which quarter of 2020, got the maximum total_sold_quantity? 
The final output contains these fields sorted by the total_sold_quantity,
Quarter total_sold_quantity*/

select sum(sold_quantity) as total_sold_quantity ,
case
      when month(date) in (9,10,11) then 'Q1'
            when month(date) in (12,01,02) then 'Q2'
                  when month(date) in (03,04,05) then 'Q3'
                      else 'Q4'
end as Quarter
 from fact_sales_monthly 
 where fiscal_year = '2020'
 group by quarter
 order by total_sold_quantity desc;
 
Task 9
Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution? 
The final output contains these fields,
channel , gross_sales_mln percentage*/

DROP TABLE gross_sales_mln_by_channel;
CREATE TEMPORARY TABLE gross_sales_mln_by_channel
with gross_sales_mln_by_channel as 
(
				select
				c.channel, 
				Round(sum(s.sold_quantity*g.gross_price/1000000),2) as gross_sales_mln 
				from fact_sales_monthly s
				join fact_gross_price g
					 on g.product_code = s.product_code and
						s.fiscal_year = s.fiscal_year
				join dim_customer c on
					   c.customer_code = s.customer_code
				where s.fiscal_year = '2021'
				group by channel
)
select 
*,sum(gross_sales_mln) over() AS TOTAL
from gross_sales_mln_by_channel;

SELECT 
CHANNEL,
GROSS_SALES_MLN,
CONCAT(ROUND(GROSS_SALES_MLN*100/TOTAL,2)," " '%') AS percentage
FROM Gross_sales_mln_by_channel
ORDER BY PERCENTAGE DESC;


Task 10
Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021?
The final output contains these fields
division product_code,product total_sold_quantity rank_order*/


WITH OUTPUT AS
(
			SELECT 
					P.PRODUCT_CODE,
					P.DIVISION,
					P.PRODUCT,
					SUM(S.SOLD_QUANTITY) AS total_sold_quantity
			FROM FACT_SALES_MONTHLY S
			JOIN DIM_PRODUCT P
					ON P.PRODUCT_CODE=S.PRODUCT_CODE
			WHERE S.FISCAL_YEAR = '2021'
			GROUP BY P.PRODUCT_CODE
            ORDER BY DIVISION
),
 output1 as (
				SELECT *,
		        dense_RANK() OVER(PARTITION BY DIVISION ORDER BY total_sold_quantity DESC) AS rank_order
FROM OUTPUT
)

select * 
from output1
where rank_order<=3
;
